# Docker Compose para SOA E-commerce - Bancos de Dados e Cliente Web

services:
  # Banco de dados PostgreSQL para CustomerService
  pg-customers:
    image: postgres:15
    container_name: pg-customers
    environment:
      POSTGRES_DB: customers_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pg_customers_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Banco de dados PostgreSQL para CatalogService
  pg-catalog:
    image: postgres:15
    container_name: pg-catalog
    environment:
      POSTGRES_DB: catalog_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - pg_catalog_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Banco de dados PostgreSQL para SalesService
  pg-sales:
    image: postgres:15
    container_name: pg-sales
    environment:
      POSTGRES_DB: sales_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - pg_sales_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Cliente Web para PostgreSQL
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    volumes:
      - ./pgadmin-servers.json:/pgadmin4/servers.json
    depends_on:
      - pg-customers
      - pg-catalog
      - pg-sales

volumes:
  pg_customers_data:
  pg_catalog_data:
  pg_sales_data:
